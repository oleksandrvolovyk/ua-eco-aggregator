name: CI with Gradle

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build LunMistoScraper app JAR
      run: ./gradlew :LunMistoScraper:buildFatJar

    - name: Build SensorCommunityScraper app JAR
      run: ./gradlew :SensorCommunityScraper:buildFatJar

    - name: Build MeteoGovUaScraper app JAR
      run: ./gradlew :MeteoGovUaScraper:buildFatJar

    - name: Build SaveDniproScraper app JAR
      run: ./gradlew :SaveDniproScraper:buildFatJar

    - name: Build EcoZagrozaGovUaScraper app JAR
      run: ./gradlew :EcoZagrozaGovUaScraper:buildFatJar

    - name: Build Public API JAR
      run: ./gradlew :PublicAPI:buildFatJar

    - name: Build Scraper API JAR
      run: ./gradlew :ScraperAPI:buildFatJar

    - name: Build Admin API JAR
      run: ./gradlew :AdminAPI:buildFatJar

    - name: Build Webhook API JAR
      run: ./gradlew :WebhookAPI:buildFatJar

    - name: Create a remote release
      id: create_release
      uses: actions/create-release@v1
      with:
        owner: oleksandrvolovyk
        repo: ua-eco-aggregator-public
        release_name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        commitish: main
        body: Release ${{ github.ref_name }} body
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload LunMistoScraper JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: LunMistoScraper/build/libs/LunMistoScraper-all.jar
        asset_name: LunMistoScraper.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload SensorCommunityScraper JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: SensorCommunityScraper/build/libs/SensorCommunityScraper-all.jar
        asset_name: SensorCommunityScraper.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload MeteoGovUaScraper JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: MeteoGovUaScraper/build/libs/MeteoGovUaScraper-all.jar
        asset_name: MeteoGovUaScraper.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload SaveDniproScraper JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: SaveDniproScraper/build/libs/SaveDniproScraper-all.jar
        asset_name: SaveDniproScraper.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload EcoZagrozaGovUaScraper JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: EcoZagrozaGovUaScraper/build/libs/EcoZagrozaGovUaScraper-all.jar
        asset_name: EcoZagrozaGovUaScraper.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload PublicAPI JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: PublicAPI/build/libs/PublicAPI-all.jar
        asset_name: PublicAPI.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload ScraperAPI JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ScraperAPI/build/libs/ScraperAPI-all.jar
        asset_name: ScraperAPI.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload AdminAPI JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: AdminAPI/build/libs/AdminAPI-all.jar
        asset_name: AdminAPI.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload WebhookAPI JAR
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: WebhookAPI/build/libs/WebhookAPI-all.jar
        asset_name: WebhookAPI.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
